name: [INFRA] Terragrunt Config CI/CD

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'pipelines/infra/terragrunt/**'
  push:
    branches: [ main ]
    paths:
      - 'pipelines/infra/terragrunt/**'
  workflow_dispatch:
    inputs:
      apply_now:
        description: 'Run apply after a successful plan (manual runs only)'
        required: false
        default: 'false'
        type: choice
        options: ['false', 'true']

# Run all shell steps from the terragrunt subdir
defaults:
  run:
    working-directory: pipelines/infra/terragrunt

env:
  TG_VERSION: v0.67.4
  TF_VERSION: 1.9.3
  TG_CACHE_DIR: .terragrunt-cache
  TF_DATA_DIR: .terraform
  TG_PARALLELISM: "4"

permissions:
  contents: read
  pull-requests: write

jobs:
  plan:
    name: Validate • Scan • Plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Install Terragrunt
        run: |
          curl -Ls "https://github.com/gruntwork-io/terragrunt/releases/download/${TG_VERSION}/terragrunt_linux_amd64" -o terragrunt
          sudo install terragrunt /usr/local/bin/terragrunt
          terragrunt --version

      - name: Cache Terraform/Terragrunt
        uses: actions/cache@v4
        with:
          path: |
            **/.terraform
            **/.terragrunt-cache
            $HOME/.terraform.d/plugin-cache
          key: tg-${{ runner.os }}-${{ hashFiles('pipelines/infra/terragrunt/**/*.hcl') }}

      - name: Format check (terragrunt hclfmt)
        run: terragrunt hclfmt --terragrunt-check

      - name: Validate inputs
        run: terragrunt run-all validate-inputs --terragrunt-non-interactive --terragrunt-parallelism $TG_PARALLELISM

      - name: Init (populate .terragrunt-cache)
        run: terragrunt run-all init --terragrunt-non-interactive --terragrunt-parallelism $TG_PARALLELISM

      - name: Plan (store artifacts)
        run: |
          terragrunt run-all plan \
            --terragrunt-non-interactive \
            --terragrunt-parallelism $TG_PARALLELISM \
            -- -lock=false -out=tfplan

      - name: Upload plans
        uses: actions/upload-artifact@v4
        with:
          name: terragrunt-plans
          path: |
            pipelines/infra/terragrunt/**/tfplan
            pipelines/infra/terragrunt/**/.terragrunt-cache/**/tfplan
          if-no-files-found: ignore
          retention-days: 7

  apply:
    name: Apply
    runs-on: ubuntu-latest
    needs: [plan]
    # Auto-apply only on push to main; on manual runs require input toggle
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch' && inputs.apply_now == 'true')
    environment:
      name: prod
    steps:
      - uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Install Terragrunt
        run: |
          curl -Ls "https://github.com/gruntwork-io/terragrunt/releases/download/${TG_VERSION}/terragrunt_linux_amd64" -o terragrunt
          sudo install terragrunt /usr/local/bin/terragrunt
          terragrunt --version

      - name: Cache Terraform/Terragrunt
        uses: actions/cache@v4
        with:
          path: |
            **/.terraform
            **/.terragrunt-cache
            $HOME/.terraform.d/plugin-cache
          key: tg-${{ runner.os }}-${{ hashFiles('pipelines/infra/terragrunt/**/*.hcl') }}

      - name: Init
        run: terragrunt run-all init --terragrunt-non-interactive --terragrunt-parallelism $TG_PARALLELISM

      - name: Apply
        run: terragrunt run-all apply --terragrunt-non-interactive --terragrunt-parallelism $TG_PARALLELISM -- -auto-approve

